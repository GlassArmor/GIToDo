{"ast":null,"code":"import _classCallCheck from\"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/GIT ToDo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/GIT ToDo/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/GIT ToDo/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/GIT ToDo/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./Task.css';import formatDistanceToNow from'date-fns/formatDistanceToNow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Task=/*#__PURE__*/function(_Component){_inherits(Task,_Component);var _super=_createSuper(Task);function Task(){var _this;_classCallCheck(this,Task);_this=_super.call(this);_this.state={inputValue:''};_this.onSubmit=function(e){e.preventDefault();_this.props.onEdit(_this.props.id,_this.state.inputValue);_this.setState({inputValue:''});};_this.onChange=function(e){_this.setState({inputValue:e.target.value});};return _this;}_createClass(Task,[{key:\"render\",value:function render(){var _this$props=this.props,id=_this$props.id,taskText=_this$props.taskText,taskDate=_this$props.taskDate,taskCompleted=_this$props.taskCompleted,taskEditing=_this$props.taskEditing,onDeleted=_this$props.onDeleted,onDone=_this$props.onDone,onEdit=_this$props.onEdit,visible=_this$props.visible;if(!visible)return null;var inputString=/*#__PURE__*/_jsx(\"form\",{onSubmit:this.onSubmit,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"edit\",placeholder:\"Edit task\",onChange:this.onChange,value:this.state.inputValue,autoFocus:true})});var nameString='';if(taskCompleted)nameString+=' completed';if(taskEditing)nameString+=' editing';return/*#__PURE__*/_jsxs(\"li\",{className:nameString,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"toggle\",type:\"checkbox\",onClick:onDone,defaultChecked:taskCompleted?true:false}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"description\",children:taskText}),/*#__PURE__*/_jsxs(\"span\",{className:\"created\",children:[\"created \",formatDistanceToNow(taskDate,{includeSeconds:true}),\" ago\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"icon icon-edit\",onClick:function onClick(){return onEdit(id);}}),/*#__PURE__*/_jsx(\"button\",{className:\"icon icon-destroy\",onClick:onDeleted})]}),this.props.taskEditing?inputString:null]});}}]);return Task;}(Component);Task.defaultProps={id:'a0',taskText:'Some Epic task (Unlock legendary for only 9.99!..)',taskDate:new Date(),taskCompleted:false,taskEditing:false,onDeleted:function onDeleted(){},onDone:function onDone(){},onEdit:function onEdit(){},visible:true};export{Task as default};;","map":{"version":3,"sources":["/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/GIT ToDo/src/components/Task/Task.js"],"names":["React","Component","formatDistanceToNow","Task","state","inputValue","onSubmit","e","preventDefault","props","onEdit","id","setState","onChange","target","value","taskText","taskDate","taskCompleted","taskEditing","onDeleted","onDone","visible","inputString","nameString","includeSeconds","defaultProps","Date"],"mappings":"gjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,YAAP,CAEA,MAAOC,CAAAA,mBAAP,KAAgC,8BAAhC,C,2FAGqBC,CAAAA,I,4FA0BnB,eAAc,sCACZ,wBAEA,MAAKC,KAAL,CAAa,CACXC,UAAU,CAAE,EADD,CAAb,CAIA,MAAKC,QAAL,CAAgB,SAACC,CAAD,CAAO,CACrBA,CAAC,CAACC,cAAF,GACA,MAAKC,KAAL,CAAWC,MAAX,CAAkB,MAAKD,KAAL,CAAWE,EAA7B,CAAiC,MAAKP,KAAL,CAAWC,UAA5C,EACA,MAAKO,QAAL,CAAc,CAAEP,UAAU,CAAE,EAAd,CAAd,EACD,CAJD,CAMA,MAAKQ,QAAL,CAAgB,SAACN,CAAD,CAAO,CACrB,MAAKK,QAAL,CAAc,CAAEP,UAAU,CAAEE,CAAC,CAACO,MAAF,CAASC,KAAvB,CAAd,EACD,CAFD,CAbY,aAgBb,C,uCAED,iBAAS,CACP,gBAAiG,KAAKN,KAAtG,CAAME,EAAN,aAAMA,EAAN,CAAUK,QAAV,aAAUA,QAAV,CAAoBC,QAApB,aAAoBA,QAApB,CAA8BC,aAA9B,aAA8BA,aAA9B,CAA6CC,WAA7C,aAA6CA,WAA7C,CAA0DC,SAA1D,aAA0DA,SAA1D,CAAqEC,MAArE,aAAqEA,MAArE,CAA6EX,MAA7E,aAA6EA,MAA7E,CAAqFY,OAArF,aAAqFA,OAArF,CACA,GAAI,CAACA,OAAL,CAAc,MAAO,KAAP,CAEd,GAAIC,CAAAA,WAAW,cAAG,aAAM,QAAQ,CAAE,KAAKjB,QAArB,uBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,MAA7B,CACmB,WAAW,CAAC,WAD/B,CAEmB,QAAQ,CAAG,KAAKO,QAFnC,CAGmB,KAAK,CAAK,KAAKT,KAAL,CAAWC,UAHxC,CAImB,SAAS,KAJ5B,EADF,EAAlB,CAQA,GAAImB,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIN,aAAJ,CAAmBM,UAAU,EAAI,YAAd,CACnB,GAAIL,WAAJ,CAAiBK,UAAU,EAAI,UAAd,CACjB,mBACE,YAAI,SAAS,CAAEA,UAAf,wBACE,aAAK,SAAS,CAAC,MAAf,wBACE,cAAO,SAAS,CAAC,QAAjB,CAA0B,IAAI,CAAC,UAA/B,CAA0C,OAAO,CAAGH,MAApD,CAA6D,cAAc,CAAIH,aAAa,CAAE,IAAF,CAAQ,KAApG,EADF,cAEI,sCACE,aAAM,SAAS,CAAC,aAAhB,UAAiCF,QAAjC,EADF,cAEE,cAAM,SAAS,CAAC,SAAhB,sBAAoCd,mBAAmB,CAACe,QAAD,CAAW,CAACQ,cAAc,CAAE,IAAjB,CAAX,CAAvD,UAFF,GAFJ,cAMI,eAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAG,yBAAMf,CAAAA,MAAM,CAACC,EAAD,CAAZ,EAA7C,EANJ,cAOI,eAAQ,SAAS,CAAC,mBAAlB,CAAsC,OAAO,CAAGS,SAAhD,EAPJ,GADF,CAUI,KAAKX,KAAL,CAAWU,WAAX,CAAwBI,WAAxB,CAAsC,IAV1C,GADF,CAcD,C,kBAzE+BtB,S,EAAbE,I,CAEZuB,Y,CAAe,CACpBf,EAAE,CAAE,IADgB,CAEpBK,QAAQ,CAAE,oDAFU,CAGpBC,QAAQ,CAAE,GAAIU,CAAAA,IAAJ,EAHU,CAIpBT,aAAa,CAAE,KAJK,CAKpBC,WAAW,CAAE,KALO,CAMpBC,SAAS,CAAE,oBAAI,CAAE,CANG,CAOpBC,MAAM,CAAE,iBAAI,CAAE,CAPM,CAQpBX,MAAM,CAAE,iBAAI,CAAE,CARM,CASpBY,OAAO,CAAE,IATW,C,QAFHnB,I,aA2EpB","sourcesContent":["import React, { Component } from 'react';\nimport './Task.css';\n\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport PropTypes from 'prop-types';\n\nexport default class Task extends Component {\n\n  static defaultProps = {\n    id: 'a0',\n    taskText: 'Some Epic task (Unlock legendary for only 9.99!..)',\n    taskDate: new Date(),\n    taskCompleted: false,\n    taskEditing: false,\n    onDeleted: ()=>{},\n    onDone: ()=>{} ,\n    onEdit: ()=>{},\n    visible: true\n  }\n\n  static propTypes = {\n    id: PropTypes.string,\n    taskText: PropTypes.string,\n    taskDate: PropTypes.instanceOf(Date),\n    taskCompleted: PropTypes.bool,\n    taskEditing: PropTypes.bool,\n    onDeleted: PropTypes.func,\n    onDone: PropTypes.func ,\n    onEdit: PropTypes.func,\n    visible: PropTypes.bool\n  }\n\n  constructor() {\n    super();\n\n    this.state = {\n      inputValue: ''\n    };\n\n    this.onSubmit = (e) => {\n      e.preventDefault();\n      this.props.onEdit(this.props.id, this.state.inputValue);\n      this.setState({ inputValue: '' });\n    };\n\n    this.onChange = (e) => {\n      this.setState({ inputValue: e.target.value });\n    };\n  }\n\n  render() {\n    let { id, taskText, taskDate, taskCompleted, taskEditing, onDeleted, onDone, onEdit, visible } = this.props;\n    if (!visible) return null;\n\n    let inputString = <form onSubmit={this.onSubmit}>\n                        <input type=\"text\" className=\"edit\"\n                                           placeholder=\"Edit task\"\n                                           onChange={ this.onChange }\n                                           value = { this.state.inputValue }\n                                           autoFocus />\n                      </form>;\n\n    let nameString = '';\n    if (taskCompleted) nameString += ' completed';\n    if (taskEditing) nameString += ' editing';\n    return (\n      <li className={nameString} >\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onClick={ onDone } defaultChecked = {taskCompleted? true: false } />\n            <label>\n              <span className=\"description\" >{ taskText }</span>\n              <span className=\"created\">created { formatDistanceToNow(taskDate, {includeSeconds: true} ) } ago</span>\n            </label>\n            <button className=\"icon icon-edit\" onClick={ () => onEdit(id) } ></button>\n            <button className=\"icon icon-destroy\" onClick={ onDeleted }></button>\n        </div>\n        { this.props.taskEditing? inputString : null }\n      </li>\n    );\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}