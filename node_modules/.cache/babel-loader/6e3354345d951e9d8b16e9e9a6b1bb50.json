{"ast":null,"code":"var _jsxFileName = \"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/Task/Task.js\";\nimport React from 'react';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  state,\n  taskText\n}) => {\n  let inputString = /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: \"edit\",\n    placeHolder: \"Editing task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: state,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: taskText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: \"created 17 seconds ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), state = 'editing' ? inputString : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/Task/Task.js"],"names":["React","Task","state","taskText","inputString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAF,KAA0B;AACrC,MAAIC,WAAW,gBAAI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAoC,IAAA,WAAW,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAnB;;AACA,sBACE;AAAI,IAAA,SAAS,EAAEF,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBAAgCC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUID,KAAK,GAAG,YAAWE,WAAX,GAAyB,IAVrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;KAAMH,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './Task.css';\n\nconst Task = ( { state, taskText }) => {\n  let inputString =  <input type=\"text\" className=\"edit\" placeHolder=\"Editing task\" />;\n  return (\n    <li className={state}>\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" />\n          <label>\n            <span className=\"description\">{ taskText }</span>\n            <span className=\"created\">created 17 seconds ago</span>\n          </label>\n          <button className=\"icon icon-edit\"></button>\n          <button className=\"icon icon-destroy\"></button>\n      </div>\n      { state = 'editing'? inputString : null }\n    </li>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}