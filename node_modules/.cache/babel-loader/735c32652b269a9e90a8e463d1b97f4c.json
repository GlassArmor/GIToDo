{"ast":null,"code":"var _jsxFileName = \"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/TasksFilter/TasksFilter.js\";\nimport React from 'react';\nimport './TasksFilter.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksFilter = ({\n  mode,\n  setMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === 'all' ? 'selected' : '',\n        onClick: () => setMode('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === 'undone' ? 'selected' : '',\n        onClick: () => setMode('undone'),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: mode === 'done' ? 'selected' : '',\n        onClick: () => setMode('done'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TasksFilter;\nTasksFilter.defaultProps = {\n  mode: 'all',\n  setMode: () => {}\n};\nTasksFilter.propTypes = {\n  mode: PropTypes.oneOf(['all', 'done', 'undone']),\n  setMode: PropTypes.func\n};\nexport default TasksFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksFilter\");","map":{"version":3,"sources":["/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/TasksFilter/TasksFilter.js"],"names":["React","PropTypes","TasksFilter","mode","setMode","defaultProps","propTypes","oneOf","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AACvC,sBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,4BACQ;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAED,IAAI,KAAG,KAAP,GAAc,UAAd,GAA0B,EAA7C;AAAkD,QAAA,OAAO,EAAE,MAAIC,OAAO,CAAC,KAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAED,IAAI,KAAG,QAAP,GAAiB,UAAjB,GAA6B,EAAhD;AAAqD,QAAA,OAAO,EAAE,MAAIC,OAAO,CAAC,QAAD,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJR,eAOQ;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAED,IAAI,KAAG,MAAP,GAAe,UAAf,GAA2B,EAA9C;AAAmD,QAAA,OAAO,EAAE,MAAIC,OAAO,CAAC,MAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAMF,W;AAgBNA,WAAW,CAACG,YAAZ,GAA2B;AACzBF,EAAAA,IAAI,EAAE,KADmB;AAEzBC,EAAAA,OAAO,EAAE,MAAI,CAAE;AAFU,CAA3B;AAKAF,WAAW,CAACI,SAAZ,GAAwB;AACtBH,EAAAA,IAAI,EAAEF,SAAS,CAACM,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAAhB,CADgB;AAEtBH,EAAAA,OAAO,EAAEH,SAAS,CAACO;AAFG,CAAxB;AAKA,eAAeN,WAAf","sourcesContent":["import React from 'react';\nimport './TasksFilter.css';\n\nimport PropTypes from 'prop-types';\n\nconst TasksFilter = ({mode, setMode}) => {\n  return (\n    <ul className=\"filters\">\n            <li>\n              <button className={mode==='all'? 'selected': '' } onClick={()=>setMode('all')}>All</button>\n            </li>\n            <li>\n              <button className={mode==='undone'? 'selected': '' } onClick={()=>setMode('undone')} >Active</button>\n            </li>\n            <li>\n              <button className={mode==='done'? 'selected': '' } onClick={()=>setMode('done')} >Completed</button>\n            </li>\n    </ul>\n  );\n};\n\nTasksFilter.defaultProps = {\n  mode: 'all',\n  setMode: ()=>{}\n};\n\nTasksFilter.propTypes = {\n  mode: PropTypes.oneOf(['all', 'done', 'undone']),\n  setMode: PropTypes.func\n};\n\nexport default TasksFilter;\n"]},"metadata":{},"sourceType":"module"}