{"ast":null,"code":"var _jsxFileName = \"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/TaskList/TaskList.js\";\nimport React from 'react';\nimport './TaskList.css';\nimport PropTypes from 'prop-types';\nimport Task from '../Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  dealsData,\n  mode,\n  onDeleted,\n  onDone,\n  onEdit\n}) => {\n  let tasks = dealsData.map(item => {\n    let visible = true;\n    if (mode === 'done' && !item.taskCompleted) visible = false;\n    if (mode === 'undone' && item.taskCompleted) visible = false;\n    return /*#__PURE__*/_jsxDEV(Task, {\n      taskText: item.taskText,\n      taskDate: item.taskDate,\n      taskCompleted: item.taskCompleted,\n      visible: visible,\n      taskEditing: item.taskEditing,\n      onDeleted: () => onDeleted(item.key),\n      onDone: () => onDone(item.key),\n      onEdit: () => onEdit(item.key)\n    }, item.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"todo-list\",\n    children: tasks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskList;\nTaskList.defaultProps = {\n  dealsData: [],\n  mode: 'all',\n  onDeleted: () => {},\n  onDone: () => {},\n  onEdit: () => {}\n};\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/TaskList/TaskList.js"],"names":["React","PropTypes","Task","TaskList","dealsData","mode","onDeleted","onDone","onEdit","tasks","map","item","visible","taskCompleted","taskText","taskDate","taskEditing","key","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,QAAQ,GAAG,CAAE;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,MAA9B;AAAsCC,EAAAA;AAAtC,CAAF,KAAqD;AAEpE,MAAIC,KAAK,GAAGL,SAAS,CAACM,GAAV,CAAeC,IAAD,IAAU;AAClC,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIP,IAAI,KAAK,MAAT,IAAmB,CAACM,IAAI,CAACE,aAA7B,EAA4CD,OAAO,GAAG,KAAV;AAC5C,QAAIP,IAAI,KAAK,QAAT,IAAqBM,IAAI,CAACE,aAA9B,EAA6CD,OAAO,GAAG,KAAV;AAC7C,wBACE,QAAC,IAAD;AACM,MAAA,QAAQ,EAAID,IAAI,CAACG,QADvB;AAEM,MAAA,QAAQ,EAAIH,IAAI,CAACI,QAFvB;AAGM,MAAA,aAAa,EAAIJ,IAAI,CAACE,aAH5B;AAIM,MAAA,OAAO,EAAID,OAJjB;AAKM,MAAA,WAAW,EAAID,IAAI,CAACK,WAL1B;AAMM,MAAA,SAAS,EAAK,MAAMV,SAAS,CAACK,IAAI,CAACM,GAAN,CANnC;AAOM,MAAA,MAAM,EAAK,MAAMV,MAAM,CAACI,IAAI,CAACM,GAAN,CAP7B;AAQM,MAAA,MAAM,EAAK,MAAMT,MAAM,CAACG,IAAI,CAACM,GAAN;AAR7B,OAAaN,IAAI,CAACM,GAAlB;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAfW,CAAZ;AAiBA,sBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;KAAMN,Q;AA0BNA,QAAQ,CAACe,YAAT,GAAwB;AACtBd,EAAAA,SAAS,EAAE,EADW;AAEtBC,EAAAA,IAAI,EAAE,KAFgB;AAGtBC,EAAAA,SAAS,EAAE,MAAI,CAAE,CAHK;AAItBC,EAAAA,MAAM,EAAE,MAAI,CAAE,CAJQ;AAKtBC,EAAAA,MAAM,EAAE,MAAI,CAAE;AALQ,CAAxB;AAQA,eAAeL,QAAf","sourcesContent":["import React from 'react';\nimport './TaskList.css';\n\nimport PropTypes from 'prop-types';\n\nimport Task from '../Task';\n\nconst TaskList = ( { dealsData, mode, onDeleted, onDone, onEdit }) => {\n\n  let tasks = dealsData.map((item) => {\n    let visible = true;\n    if (mode === 'done' && !item.taskCompleted) visible = false;\n    if (mode === 'undone' && item.taskCompleted) visible = false;\n    return (\n      <Task key = {item.key}\n            taskText = {item.taskText}\n            taskDate = {item.taskDate}\n            taskCompleted = {item.taskCompleted}\n            visible = {visible}\n            taskEditing = {item.taskEditing}\n            onDeleted = { () => onDeleted(item.key) }\n            onDone = { () => onDone(item.key) }\n            onEdit = { () => onEdit(item.key) } />\n    );\n  });\n\n  return (\n    <ul className=\"todo-list\">\n      {tasks}\n    </ul>\n  );\n};\n\nTaskList.defaultProps = {\n  dealsData: [],\n  mode: 'all',\n  onDeleted: ()=>{},\n  onDone: ()=>{},\n  onEdit: ()=>{}\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}