{"ast":null,"code":"var _jsxFileName = \"/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/Task/Task.js\";\nimport React, { Component } from 'react';\nimport './Task.css';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = () => {\n      console.log(edited);\n    };\n  }\n\n  render() {\n    let {\n      taskText,\n      taskDate,\n      taskCompleted,\n      taskEditing,\n      onDeleted,\n      onDone,\n      onEdit,\n      visible\n    } = this.props;\n    if (!visible) return null;\n\n    let inputString = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"edit\",\n        placeholder: \"Editing task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n\n    let nameString = '';\n    if (taskCompleted) nameString += ' completed';\n    if (taskEditing) nameString += ' editing';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: nameString,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onClick: onDone,\n          defaultChecked: taskCompleted ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: taskText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: [\"created \", formatDistanceToNow(taskDate), \" ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: onEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\",\n          onClick: onDeleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), this.props.taskEditing ? inputString : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTask.defaultProps = {\n  taskText: 'Some Epic task (Unlock legendary for only 9.99!..)',\n  taskDate: new Date(),\n  taskCompleted: false,\n  taskEditing: false,\n  onDeleted: () => {},\n  onDone: () => {},\n  onEdit: () => {},\n  visible: true\n};\n;","map":{"version":3,"sources":["/Users/skadi/Documents/LEARNED/JM_learning/ReactTest/todo/src/components/Task/Task.js"],"names":["React","Component","formatDistanceToNow","PropTypes","Task","constructor","onSubmit","console","log","edited","render","taskText","taskDate","taskCompleted","taskEditing","onDeleted","onDone","onEdit","visible","props","inputString","nameString","defaultProps","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AAEA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAa1CI,EAAAA,WAAW,GAAG;AACZ;;AAEA,SAAKC,QAAL,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,aAAtB;AAAqCC,MAAAA,WAArC;AAAkDC,MAAAA,SAAlD;AAA6DC,MAAAA,MAA7D;AAAqEC,MAAAA,MAArE;AAA6EC,MAAAA;AAA7E,QAAyF,KAAKC,KAAlG;AACA,QAAI,CAACD,OAAL,EAAc,OAAO,IAAP;;AAEd,QAAIE,WAAW,gBAEf;AAAM,MAAA,QAAQ,EAAE,KAAKd,QAArB;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAoC,QAAA,WAAW,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA;;AAMA,QAAIe,UAAU,GAAG,EAAjB;AACA,QAAIR,aAAJ,EAAmBQ,UAAU,IAAI,YAAd;AACnB,QAAIP,WAAJ,EAAiBO,UAAU,IAAI,UAAd;AACjB,wBACE;AAAI,MAAA,SAAS,EAAEA,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,UAA/B;AAA0C,UAAA,OAAO,EAAGL,MAApD;AAA6D,UAAA,cAAc,EAAIH,aAAa,GAAE,IAAF,GAAQ;AAApG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,sBAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,mCAAoCT,mBAAmB,CAACU,QAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAMI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAGK;AAA7C;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAsC,UAAA,OAAO,EAAGF;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUI,KAAKI,KAAL,CAAWL,WAAX,GAAwBM,WAAxB,GAAsC,IAV1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAhDyC;AAAvBhB,I,CAEZkB,Y,GAAe;AACpBX,EAAAA,QAAQ,EAAE,oDADU;AAEpBC,EAAAA,QAAQ,EAAE,IAAIW,IAAJ,EAFU;AAGpBV,EAAAA,aAAa,EAAE,KAHK;AAIpBC,EAAAA,WAAW,EAAE,KAJO;AAKpBC,EAAAA,SAAS,EAAE,MAAI,CAAE,CALG;AAMpBC,EAAAA,MAAM,EAAE,MAAI,CAAE,CANM;AAOpBC,EAAAA,MAAM,EAAE,MAAI,CAAE,CAPM;AAQpBC,EAAAA,OAAO,EAAE;AARW,C;AAgDvB","sourcesContent":["import React, { Component } from 'react';\nimport './Task.css';\n\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport PropTypes from 'prop-types';\n\nexport default class Task extends Component {\n\n  static defaultProps = {\n    taskText: 'Some Epic task (Unlock legendary for only 9.99!..)',\n    taskDate: new Date(),\n    taskCompleted: false,\n    taskEditing: false,\n    onDeleted: ()=>{},\n    onDone: ()=>{} ,\n    onEdit: ()=>{},\n    visible: true\n  }\n\n  constructor() {\n    super();\n\n    this.onSubmit = () => {\n      console.log(edited);\n    }\n  }\n\n  render() {\n    let { taskText, taskDate, taskCompleted, taskEditing, onDeleted, onDone, onEdit, visible } = this.props;\n    if (!visible) return null;\n\n    let inputString =\n\n    <form onSubmit={this.onSubmit}>\n      <input type=\"text\" className=\"edit\" placeholder=\"Editing task\" />\n    </form>;\n\n    let nameString = '';\n    if (taskCompleted) nameString += ' completed';\n    if (taskEditing) nameString += ' editing';\n    return (\n      <li className={nameString} >\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onClick={ onDone } defaultChecked = {taskCompleted? true: false } />\n            <label>\n              <span className=\"description\" >{ taskText }</span>\n              <span className=\"created\">created { formatDistanceToNow(taskDate) } ago</span>\n            </label>\n            <button className=\"icon icon-edit\" onClick={ onEdit } ></button>\n            <button className=\"icon icon-destroy\" onClick={ onDeleted }></button>\n        </div>\n        { this.props.taskEditing? inputString : null }\n      </li>\n    );\n  }\n\n};\n"]},"metadata":{},"sourceType":"module"}